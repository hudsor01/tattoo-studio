name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Verify Prisma schema
        run: |
          if [ ! -f "prisma/schema.prisma" ]; then
            echo "Error: prisma/schema.prisma file not found"
            exit 1
          fi

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build and verify
        run: docker build -f Dockerfile.ci .

  deploy:
    needs: verify
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Check deploy hook configuration
        id: check_hook
        env:
          DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
        run: |
          if [ -n "$DEPLOY_HOOK" ]; then
            echo "hook_exists=true" >> $GITHUB_OUTPUT
          else
            echo "hook_exists=false" >> $GITHUB_OUTPUT
            echo "::warning::No VERCEL_DEPLOY_HOOK_URL secret found. Deployment will be skipped."
          fi

      - name: Trigger Vercel deployment
        if: steps.check_hook.outputs.hook_exists == 'true'
        env:
          DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK_URL }}
        run: |
          curl -X POST "$DEPLOY_HOOK"
          echo "Vercel deployment triggered successfully"
